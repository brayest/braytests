AWSTemplateFormatVersion: "2010-09-09"
Description: "ElastiCache Cluster (Redis)"

Parameters:
  Environment:
    Type: String
  AutoMinorVersionUpgrade:
    Type: String
    Default: false
  ClusterName:
    Type: String
  DatabaseCount:
    Type: Number
    Default: 16
  Engine:
    Type: String
    AllowedValues:
      - memcached
      - redis
  NodeCount:
    Type: Number
    Default: 1
  NodeType:
    Type: String
    Default: cache.t2.medium
  SubnetIds:
    Type: CommaDelimitedList
  VpcCidr:
    Type: String
  VpcId:
    Type: String

Outputs:
  AutoMinorVersionUpgrade:
    Value: !Ref AutoMinorVersionUpgrade
  ClusterDNS:
    Value: !Sub
      - "${DNS}"
      - DNS: !If
          - RedisEngine
          - !GetAtt Cluster.RedisEndpoint.Address
          - !GetAtt Cluster.ConfigurationEndpoint.Address
  ClusterUrl:
    Value: !Sub
      - "${Engine}://${Host}:${Port}"
      - Host: !If
          - RedisEngine
          - !GetAtt Cluster.RedisEndpoint.Address
          - !GetAtt Cluster.ConfigurationEndpoint.Address
        Port: !If
          - RedisEngine
          - !GetAtt Cluster.RedisEndpoint.Port
          - !GetAtt Cluster.ConfigurationEndpoint.Port
  DatabaseCount:
    Value: !Ref DatabaseCount
    Condition: RedisEngine
  Engine:
    Value: !Ref Engine
  NodeCount:
    Value: !Ref NodeCount
  NodeType:
    Value: !Ref NodeType
  SubnetIds:
    Value: !Join
      - ","
      - !Ref SubnetIds
  VpcId:
    Value: !Ref VpcId

Conditions:
  RedisEngine: !Equals [!Ref Engine, "redis"]

Mappings:
  CacheParameterGroupFamily:
    memcached:
      Name: memcached1.4
    redis:
      Name: redis3.2

Resources:
  Cluster:
    Type: AWS::ElastiCache::CacheCluster
    DependsOn: ParameterGroup
    Properties:
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      CacheNodeType: !Ref NodeType
      CacheParameterGroupName: !If
        - RedisEngine
        - !Ref ParameterGroup
        - !Ref AWS::NoValue
      CacheSubnetGroupName: !Ref SubnetGroup
      # ClusterName: !Ref ClusterName
      Engine: !Ref Engine
      NumCacheNodes: !Ref NodeCount
      VpcSecurityGroupIds:
        - !GetAtt SecurityGroup.GroupId
  ParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: !FindInMap
        - CacheParameterGroupFamily
        - !Ref Engine
        - Name
      Description: "ElastiCache Parameter Group"
      Properties: !If
        - RedisEngine
        - databases: !Ref DatabaseCount
        - !Ref AWS::NoValue
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${Engine} Security Group"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidr
          FromPort: !If [RedisEngine, 6379, 11211]
          IpProtocol: tcp
          ToPort: !If [RedisEngine, 6379, 11211]
  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: !Sub "${Engine} Subnet Group"
      SubnetIds: !Ref SubnetIds
