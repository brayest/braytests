AWSTemplateFormatVersion: "2010-09-09"
Description: "Informatics Merck Empower"

Parameters:
  JWTAuthSecret:
    Type: String
    Description: A hash used for auth between services.  This should be letters and numbers (no special characters), and 25-35 characters long.
  Environment:
    Type: String
    Default: development
  ServiceName:
    Type: String
  ClusterType:
    Description: ECS Cluster Type to launch services
    Type: String
    AllowedValues:
      - EC2(OnDemand)
      - EC2(Spot)
      - Fargate
  ContainerPort:
    Type: String
    Default: 8080
  InternalDomain:
    Type: String
    Default: "tetrascience.internal"
  ExternalDomain:
    Type: String
    Default: "tetrascience.com"
  CreateLogGroup:
    Type: String
    Default: false
  FileBucket:
    Type: String
    Description: Bucket for Files
    Default: NONE


Conditions:
  CreateLogGroup: !Equals [ !Ref CreateLogGroup, true ]
  IsFargate: !Equals [ !Ref ClusterType, Fargate ]

Outputs:
  TaskDefinition:
    Value: !Ref TaskDefinition

Resources:
  ECSLogGroup:
    Type: "AWS::Logs::LogGroup"
    Condition: CreateLogGroup
    Properties:
      LogGroupName: !Ref ServiceName
      RetentionInDays: 7
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ServiceName}-${Environment}
      ExecutionRoleArn: !If
        - IsFargate
        - !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
        - !Ref AWS::NoValue
      Cpu: !If
        - IsFargate
        - 256
        - !Ref AWS::NoValue
      Memory: !If
        - IsFargate
        - 1024
        - !Ref AWS::NoValue
      NetworkMode: !If
        - IsFargate
        - awsvpc
        - !Ref AWS::NoValue
      RequiresCompatibilities:
        - !If
          - IsFargate
          - FARGATE
          - !Ref AWS::NoValue
      ContainerDefinitions:
        - Name: !Ref ServiceName
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Image: 748412558778.dkr.ecr.us-east-1.amazonaws.com/ts-merck-empower-link-development
          Command:
            - pm2-runtime
            - start
            - processes.docker.json
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ServiceName
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: !Ref Environment
          MemoryReservation: 512
          Environment:
            - Name: AMQP_ENDPOINT
              Value: !Sub "amqp://rabbitmq.${InternalDomain}:5672"
            - Name: ENV
              Value: production
            - Name: FAKES3_HOST
              Value: s3.amazonaws.com
            - Name: FAKES3_PORT
              Value: 443
            - Name: LOG_MAX_LEVEL
              Value: 8
            - Name: LOG_TRANSPORT
              Value: console
            - Name: NODE_ENV
              Value: production
            - Name: POSTGRES_DB
              Value: empower
            - Name: POSTGRES_HOST
              Value: !Sub postgres.${InternalDomain}
            - Name: POSTGRES_PASSWORD
              Value: 'tetra2014!' #this is changed at runtime
            - Name: POSTGRES_PORT
              Value: 5432
            - Name: POSTGRES_USER
              Value: empower_user
            - Name: PROVIDER_STORAGE
              Value: s3
            - Name: S3_FILES_BUCKET_NAME
              Value: ts-merck-empower
            - Name: SERVICE_NAME
              Value: file
            - Name: SERVICE_PORT
              Value: 8080
            - Name: TENANT
              Value: multi
            - Name: MAX_FILE_PAYLOAD_SIZE
              Value: 209715200
