AWSTemplateFormatVersion: "2010-09-09"
Description: "Informatics TaskRunner Service"

Parameters:
  JWTAuthSecret:
    Type: String
    Description: A hash used for auth between services.  This should be letters and numbers (no special characters), and 25-35 characters long.
  Environment:
    Type: String
    Default: development
  ServiceName:
    Type: String
  ClusterType:
    Description: ECS Cluster Type to launch services
    Type: String
    AllowedValues:
      - EC2(OnDemand)
      - EC2(Spot)
      - Fargate
  ContainerPort:
    Type: String
    Default: 8080
  InternalDomain:
    Type: String
    Default: "tetrascience.internal"
  ExternalDomain:
    Type: String
    Default: "tetrascience.com"
  CreateLogGroup:
    Type: String
    Default: false
  FileBucket:
    Type: String
    Description: Bucket for Files
    Default: NONE

Conditions:
  CreateLogGroup: !Equals [ !Ref CreateLogGroup, true ]
  IsFargate: !Equals [ !Ref ClusterType, Fargate ]

Outputs:
  TaskDefinition:
    Value: !Ref TaskDefinition

Resources:
  ECSLogGroup:
    Type: "AWS::Logs::LogGroup"
    Condition: CreateLogGroup
    Properties:
      LogGroupName: !Ref ServiceName
      RetentionInDays: 7
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ServiceName}-${Environment}
      ExecutionRoleArn: !If
        - IsFargate
        - !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
        - !Ref AWS::NoValue
      Cpu: !If
        - IsFargate
        - 256
        - !Ref AWS::NoValue
      Memory: !If
        - IsFargate
        - 1024
        - !Ref AWS::NoValue
      NetworkMode: !If
        - IsFargate
        - awsvpc
        - !Ref AWS::NoValue
      RequiresCompatibilities:
        - !If
          - IsFargate
          - FARGATE
          - !Ref AWS::NoValue
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Image: !Sub "753968983172.dkr.ecr.us-east-1.amazonaws.com/${ServiceName}-${Environment}"
          Command:
            - pm2-runtime
            - start
            - processes.docker.json
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ServiceName
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: !Ref Environment
          MemoryReservation: 512
          Environment:
            - Name: AMQP_ENDPOINT
              Value: !Sub amqp://rabbitmq.${InternalDomain}:5672
            - Name: ENV
              Value: production
            - Name: FILE_SERVICE_ENDPOINT
              Value: !Sub file.${InternalDomain}
            - Name: LOG_TRANSPORT__CLOUDWATCH
              Value: true
            - Name: LOG_TRANSPORT__CLOUDWATCH_AWS_REGION
              Value: !Ref "AWS::Region"
            - Name: NODE_ENV
              Value: production
            - Name: OUTPUT_BUCKET #Check with chunfeng
              Value: workflows-service
            - Name: OUTPUT_PREFIX #Check with Chunfeng
              Value: /
            - Name: OUTPUT_TYPE
              Value: s3file
            - Name: PROVIDER_STORAGE
              Value: s3
            - Name: S3_ACCESS_KEY_ID #Access Key?
              Value: changeme #Change this post-deploy
            - Name: S3_FILES_BUCKET_NAME
              Value: !Ref FileBucket
            - Name: S3_SECRET_ACCESS_KEY
              Value: changeme #Change This Post-Deploy
            - Name: SCRIPTS_DIR
              Value: ./node_modules/ts-protocol-script/scripts
            - Name: SERVICE_NAME
              Value: taskrunner
            - Name: SERVICE_PORT
              Value: 8080
            - Name: TENANT
              Value: multi
            - Name: TMP_TASKS_DIR
              Value: /tmp/tasks
